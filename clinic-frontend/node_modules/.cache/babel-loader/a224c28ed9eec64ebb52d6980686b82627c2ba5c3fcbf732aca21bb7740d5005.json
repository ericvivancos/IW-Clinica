{"ast":null,"code":"var _jsxFileName = \"D:\\\\UA-Ingenieria_Web\\\\Pr\\xE1cticas\\\\Parte 2\\\\Grupal\\\\IW-Clinica\\\\clinic-frontend\\\\src\\\\components\\\\Recepcionista\\\\Reservas\\\\CalendarioReservas.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { getReservas } from \"../../../services/api\"; // Servicio para obtener reservas\nimport ModalCrearReserva from \"../../Modals/ModalCrearReserva\";\nimport ModalVerReserva from \"../../Modals/ModalVerReserva\";\nimport esLocale from \"@fullcalendar/core/locales/es\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarioReservas = () => {\n  _s();\n  const [events, setEvents] = useState([]); // Eventos para el calendario\n  const [selectedSlot, setSelectedSlot] = useState(null); // Para nuevos slots\n  const [selectedRange, setSelectedRange] = useState(null); // Para rangos de slots\n  const [selectedEvent, setSelectedEvent] = useState(null); // Para eventos existentes\n  const [isCrearModalOpen, setIsCrearModalOpen] = useState(false); // Modal de crear reserva\n  const [isVerModalOpen, setIsVerModalOpen] = useState(false); // Modal de ver reserva\n\n  const fetchReservas = async () => {\n    try {\n      const reservas = await getReservas();\n      // Transformar las reservas en el formato requerido por FullCalendar\n      const transformedEvents = reservas.map(reserva => ({\n        id: reserva.id,\n        title: reserva.servicio.nombre,\n        start: `${reserva.fecha}T${reserva.horaInicio}`,\n        end: `${reserva.fecha}T${reserva.horaFin}`,\n        extendedProps: {\n          cliente: reserva.cliente.nombre,\n          profesional: reserva.profesional.nombre,\n          sala: reserva.sala.nombre,\n          estado: reserva.estado,\n          pagada: reserva.pagada\n        }\n      }));\n      setEvents(transformedEvents);\n    } catch (error) {\n      console.error(\"Error al cargar las reservas:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchReservas();\n  });\n\n  // Seleccionar un rango de slots\n  const handleSelectRange = info => {\n    setSelectedRange({\n      start: info.startStr,\n      end: info.endStr\n    });\n    setSelectedSlot(null); // Limpia selección única\n    setSelectedEvent(null); // Limpia selección de eventos\n    setIsCrearModalOpen(true);\n  };\n\n  // Clic en un evento existente\n  const handleEventClick = info => {\n    setSelectedEvent(info.event);\n    setIsVerModalOpen(true);\n  };\n\n  // Cerrar modales\n  const handleCloseModal = () => {\n    setIsCrearModalOpen(false);\n    setIsVerModalOpen(false);\n    setSelectedSlot(null);\n    setSelectedRange(null);\n    setSelectedEvent(null);\n  };\n\n  // Guardar nueva reserva desde el modal\n  const handleSaveReserva = async () => {\n    try {\n      await fetchReservas();\n    } catch (error) {\n      console.error(\"Error al actualizar las reservas después de guardar:\", error);\n    }\n    handleCloseModal();\n  };\n  const handleBorrarReserva = async () => {\n    try {\n      await fetchReservas(); // Recargar las reservas desde el backend\n    } catch (error) {\n      console.error(\"Error al recargar las reservas después de borrar:\", error);\n    }\n    handleCloseModal();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-5xl mx-auto bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [timeGridPlugin, interactionPlugin],\n      initialView: \"timeGridWeek\",\n      locale: esLocale,\n      allDaySlot: false,\n      slotMinTime: \"09:00:00\",\n      slotMaxTime: \"14:00:00\",\n      selectable: true,\n      hiddenDays: [0, 6],\n      events: events,\n      select: handleSelectRange // Para seleccionar slots\n      ,\n      eventClick: handleEventClick // Para clic en eventos\n      ,\n      headerToolbar: {\n        left: \"prev,next today\",\n        center: \"title\",\n        right: \"timeGridWeek,timeGridDay\"\n      },\n      slotLabelFormat: {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: false\n      },\n      selectAllow: selectInfo => {\n        const now = new Date();\n        const start = selectInfo.start.getTime();\n        const end = selectInfo.end.getTime();\n\n        // No permitimos seleccion antes de hoy\n        if (start < now.setHours(0, 0, 0, 0)) {\n          return false;\n        }\n\n        // Verificar si el rango seleccionado se solapa con eventos existentes\n        for (let reserva of events) {\n          const reservaStart = new Date(reserva.start).getTime();\n          const reservaEnd = new Date(reserva.end).getTime();\n          if (start >= reservaStart && start < reservaEnd ||\n          // Inicio dentro de un evento\n          end > reservaStart && end <= reservaEnd ||\n          // Fin dentro de un evento\n          start <= reservaStart && end >= reservaEnd // Evento contenido\n          ) {\n            return false;\n          }\n        }\n        const startDay = selectInfo.start.getDate();\n        const endDay = selectInfo.end.getDate();\n        return startDay === endDay; // Permite solo si es el mismo día\n      },\n      slotEventOverlap: false,\n      eventContent: eventInfo => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cursor-pointer\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: eventInfo.timeText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this), \" - \", eventInfo.event.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), isCrearModalOpen && /*#__PURE__*/_jsxDEV(ModalCrearReserva, {\n      onClose: handleCloseModal,\n      slot: selectedSlot || selectedRange // Pasa slot único o rango\n      ,\n      onSave: handleSaveReserva,\n      rol: \"RECEPCIONISTA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }, this), isVerModalOpen && /*#__PURE__*/_jsxDEV(ModalVerReserva, {\n      onClose: handleCloseModal,\n      event: selectedEvent // Pasa el evento seleccionado\n      ,\n      onPagar: handleSaveReserva,\n      onBorrar: handleBorrarReserva\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n_s(CalendarioReservas, \"R8Q7nT1RYhYkrcH4uIrIB58YNk0=\");\n_c = CalendarioReservas;\nexport default CalendarioReservas;\nvar _c;\n$RefreshReg$(_c, \"CalendarioReservas\");","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","timeGridPlugin","interactionPlugin","getReservas","ModalCrearReserva","ModalVerReserva","esLocale","jsxDEV","_jsxDEV","CalendarioReservas","_s","events","setEvents","selectedSlot","setSelectedSlot","selectedRange","setSelectedRange","selectedEvent","setSelectedEvent","isCrearModalOpen","setIsCrearModalOpen","isVerModalOpen","setIsVerModalOpen","fetchReservas","reservas","transformedEvents","map","reserva","id","title","servicio","nombre","start","fecha","horaInicio","end","horaFin","extendedProps","cliente","profesional","sala","estado","pagada","error","console","handleSelectRange","info","startStr","endStr","handleEventClick","event","handleCloseModal","handleSaveReserva","handleBorrarReserva","className","children","plugins","initialView","locale","allDaySlot","slotMinTime","slotMaxTime","selectable","hiddenDays","select","eventClick","headerToolbar","left","center","right","slotLabelFormat","hour","minute","hour12","selectAllow","selectInfo","now","Date","getTime","setHours","reservaStart","reservaEnd","startDay","getDate","endDay","slotEventOverlap","eventContent","eventInfo","timeText","fileName","_jsxFileName","lineNumber","columnNumber","onClose","slot","onSave","rol","onPagar","onBorrar","_c","$RefreshReg$"],"sources":["D:/UA-Ingenieria_Web/Prácticas/Parte 2/Grupal/IW-Clinica/clinic-frontend/src/components/Recepcionista/Reservas/CalendarioReservas.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport { getReservas } from \"../../../services/api\"; // Servicio para obtener reservas\r\nimport ModalCrearReserva from \"../../Modals/ModalCrearReserva\";\r\nimport ModalVerReserva from \"../../Modals/ModalVerReserva\";\r\nimport esLocale from \"@fullcalendar/core/locales/es\";\r\n\r\nconst CalendarioReservas = () => {\r\n    const [events, setEvents] = useState([]); // Eventos para el calendario\r\n    const [selectedSlot, setSelectedSlot] = useState(null); // Para nuevos slots\r\n    const [selectedRange, setSelectedRange] = useState(null); // Para rangos de slots\r\n    const [selectedEvent, setSelectedEvent] = useState(null); // Para eventos existentes\r\n    const [isCrearModalOpen, setIsCrearModalOpen] = useState(false); // Modal de crear reserva\r\n    const [isVerModalOpen, setIsVerModalOpen] = useState(false); // Modal de ver reserva\r\n\r\n\r\n        const fetchReservas = async () => {\r\n            try {\r\n                const reservas = await getReservas();\r\n                // Transformar las reservas en el formato requerido por FullCalendar\r\n                const transformedEvents = reservas.map((reserva) => ({\r\n                    id: reserva.id,\r\n                    title: reserva.servicio.nombre,\r\n                    start: `${reserva.fecha}T${reserva.horaInicio}`,\r\n                    end: `${reserva.fecha}T${reserva.horaFin}`,\r\n                    extendedProps: {\r\n                        cliente: reserva.cliente.nombre,\r\n                        profesional: reserva.profesional.nombre,\r\n                        sala: reserva.sala.nombre,\r\n                        estado: reserva.estado,\r\n                        pagada: reserva.pagada,\r\n                    },\r\n                }));\r\n                setEvents(transformedEvents);\r\n            } catch (error) {\r\n                console.error(\"Error al cargar las reservas:\", error);\r\n            }\r\n        };\r\n    \r\n    useEffect( () => {\r\n        fetchReservas();\r\n    });\r\n\r\n    // Seleccionar un rango de slots\r\n    const handleSelectRange = (info) => {\r\n        setSelectedRange({\r\n            start: info.startStr,\r\n            end: info.endStr,\r\n        });\r\n        setSelectedSlot(null); // Limpia selección única\r\n        setSelectedEvent(null); // Limpia selección de eventos\r\n        setIsCrearModalOpen(true);\r\n    };\r\n\r\n    // Clic en un evento existente\r\n    const handleEventClick = (info) => {\r\n        setSelectedEvent(info.event);\r\n        setIsVerModalOpen(true);\r\n    };\r\n\r\n    // Cerrar modales\r\n    const handleCloseModal = () => {\r\n        setIsCrearModalOpen(false);\r\n        setIsVerModalOpen(false);\r\n        setSelectedSlot(null);\r\n        setSelectedRange(null);\r\n        setSelectedEvent(null);\r\n    };\r\n\r\n    // Guardar nueva reserva desde el modal\r\n    const handleSaveReserva = async () => {\r\n        try {\r\n            await fetchReservas();\r\n        }\r\n        catch(error){\r\n            console.error(\"Error al actualizar las reservas después de guardar:\", error);\r\n        }\r\n        handleCloseModal();\r\n    };\r\n    const handleBorrarReserva = async () => {\r\n        try {\r\n            await fetchReservas(); // Recargar las reservas desde el backend\r\n            \r\n        } catch (error) {\r\n            console.error(\"Error al recargar las reservas después de borrar:\", error);\r\n        }\r\n        handleCloseModal();\r\n    };\r\n    return (\r\n        <div className=\"p-4 max-w-5xl mx-auto bg-gray-50\">\r\n            <FullCalendar\r\n                plugins={[timeGridPlugin, interactionPlugin]}\r\n                initialView=\"timeGridWeek\"\r\n                locale={esLocale}\r\n                allDaySlot={false}\r\n                slotMinTime=\"09:00:00\"\r\n                slotMaxTime=\"14:00:00\"\r\n                selectable={true}\r\n                hiddenDays={[0, 6]}\r\n                events={events}\r\n                select={handleSelectRange} // Para seleccionar slots\r\n                eventClick={handleEventClick} // Para clic en eventos\r\n                headerToolbar={{\r\n                    left: \"prev,next today\",\r\n                    center: \"title\",\r\n                    right: \"timeGridWeek,timeGridDay\",\r\n                }}\r\n                slotLabelFormat={{\r\n                    hour: \"2-digit\",\r\n                    minute: \"2-digit\",\r\n                    hour12: false,\r\n                }}\r\n                selectAllow={(selectInfo) => {\r\n                    const now = new Date();\r\n                    const start = selectInfo.start.getTime();\r\n                    const end = selectInfo.end.getTime();\r\n\r\n                    // No permitimos seleccion antes de hoy\r\n                    if (start < now.setHours(0,0,0,0)) {\r\n                        return false;\r\n                    }\r\n\r\n                    // Verificar si el rango seleccionado se solapa con eventos existentes\r\n                    for (let reserva of events) {\r\n                        const reservaStart = new Date(reserva.start).getTime();\r\n                        const reservaEnd = new Date(reserva.end).getTime();\r\n\r\n                        if (\r\n                            (start >= reservaStart && start < reservaEnd) || // Inicio dentro de un evento\r\n                            (end > reservaStart && end <= reservaEnd) || // Fin dentro de un evento\r\n                            (start <= reservaStart && end >= reservaEnd) // Evento contenido\r\n                        ) {\r\n                            return false;\r\n                        }\r\n                    }\r\n\r\n                    const startDay = selectInfo.start.getDate();\r\n                    const endDay = selectInfo.end.getDate();\r\n                    return startDay === endDay; // Permite solo si es el mismo día\r\n                }}\r\n                slotEventOverlap={false}\r\n                eventContent={(eventInfo) => (\r\n                    <div className=\"cursor-pointer\">\r\n                        <b>{eventInfo.timeText}</b> - {eventInfo.event.title}\r\n                    </div>\r\n                )}\r\n            />\r\n\r\n            {/* Modal para crear una reserva */}\r\n            {isCrearModalOpen && (\r\n                <ModalCrearReserva\r\n                    onClose={handleCloseModal}\r\n                    slot={selectedSlot || selectedRange} // Pasa slot único o rango\r\n                    onSave={handleSaveReserva}\r\n                    rol=\"RECEPCIONISTA\"\r\n                />\r\n            )}\r\n\r\n            {/* Modal para ver detalles de una reserva */}\r\n            {isVerModalOpen && (\r\n                <ModalVerReserva\r\n                    onClose={handleCloseModal}\r\n                    event={selectedEvent} // Pasa el evento seleccionado\r\n                    onPagar={handleSaveReserva}\r\n                    onBorrar={handleBorrarReserva}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CalendarioReservas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}