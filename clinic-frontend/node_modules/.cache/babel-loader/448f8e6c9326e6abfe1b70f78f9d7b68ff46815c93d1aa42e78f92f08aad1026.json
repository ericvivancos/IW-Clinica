{"ast":null,"code":"var _jsxFileName = \"D:\\\\UA-Ingenieria_Web\\\\Pr\\xE1cticas\\\\Parte 2\\\\Grupal\\\\IW-Clinica\\\\clinic-frontend\\\\src\\\\components\\\\Administradores\\\\Dashboard\\\\InformesIngresos.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Chart, LineElement, PointElement, CategoryScale, LinearScale, Tooltip, Legend } from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\nimport { obtenerResumenIngresos } from \"../../../services/api\";\n\n// Registrar los elementos necesarios para Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(LineElement, PointElement, CategoryScale, LinearScale, Tooltip, Legend);\nconst InformesIngresos = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [totalIngresos, setTotalIngresos] = useState(0);\n  useEffect(() => {\n    const fetchIngresos = async () => {\n      try {\n        const resumen = await obtenerResumenIngresos();\n        console.log(resumen);\n        const fechas = Object.keys(resumen); // Fechas\n        const valores = Object.values(resumen); // Montos\n\n        // Calcular el total de ingresos\n        const total = valores.reduce((acc, curr) => acc + curr, 0);\n        setTotalIngresos(total);\n\n        // ConfiguraciÃ³n de datos para Chart.js\n        setData({\n          labels: fechas,\n          datasets: [{\n            label: \"Ingresos Totales\",\n            data: valores,\n            borderColor: \"#36A2EB\",\n            backgroundColor: \"rgba(54, 162, 235, 0.5)\",\n            tension: 0.4,\n            // Curvatura de la lÃ­nea\n            pointRadius: 5\n          }]\n        });\n      } catch (error) {\n        console.error(\"Error al obtener los ingresos:\", error);\n      }\n    };\n    fetchIngresos();\n  }, []);\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando ingresos...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-4 rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-bold mb-4\",\n      children: [\"\\uD83D\\uDCB0 Total de Ingresos: \", totalIngresos.toFixed(2), \" \\u20AC\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            display: false\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(InformesIngresos, \"O7mrqMjKOorptphKy1OGnydvNJM=\");\n_c = InformesIngresos;\nexport default InformesIngresos;\nvar _c;\n$RefreshReg$(_c, \"InformesIngresos\");","map":{"version":3,"names":["React","useEffect","useState","Chart","LineElement","PointElement","CategoryScale","LinearScale","Tooltip","Legend","Line","obtenerResumenIngresos","jsxDEV","_jsxDEV","register","InformesIngresos","_s","data","setData","totalIngresos","setTotalIngresos","fetchIngresos","resumen","console","log","fechas","Object","keys","valores","values","total","reduce","acc","curr","labels","datasets","label","borderColor","backgroundColor","tension","pointRadius","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","toFixed","options","responsive","plugins","legend","display","_c","$RefreshReg$"],"sources":["D:/UA-Ingenieria_Web/PrÃ¡cticas/Parte 2/Grupal/IW-Clinica/clinic-frontend/src/components/Administradores/Dashboard/InformesIngresos.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Chart, LineElement, PointElement, CategoryScale, LinearScale, Tooltip, Legend } from \"chart.js\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { obtenerResumenIngresos } from \"../../../services/api\";\r\n\r\n// Registrar los elementos necesarios para Chart.js\r\nChart.register(LineElement, PointElement, CategoryScale, LinearScale, Tooltip, Legend);\r\n\r\nconst InformesIngresos = () => {\r\n    const [data, setData] = useState(null);\r\n    const [totalIngresos, setTotalIngresos] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const fetchIngresos = async () => {\r\n            try {\r\n                const resumen = await obtenerResumenIngresos();\r\n                console.log(resumen);\r\n\r\n                const fechas = Object.keys(resumen); // Fechas\r\n                const valores = Object.values(resumen); // Montos\r\n\r\n                // Calcular el total de ingresos\r\n                const total = valores.reduce((acc, curr) => acc + curr, 0);\r\n\r\n                setTotalIngresos(total);\r\n\r\n                // ConfiguraciÃ³n de datos para Chart.js\r\n                setData({\r\n                    labels: fechas,\r\n                    datasets: [\r\n                        {\r\n                            label: \"Ingresos Totales\",\r\n                            data: valores,\r\n                            borderColor: \"#36A2EB\",\r\n                            backgroundColor: \"rgba(54, 162, 235, 0.5)\",\r\n                            tension: 0.4, // Curvatura de la lÃ­nea\r\n                            pointRadius: 5,\r\n                        },\r\n                    ],\r\n                });\r\n            } catch (error) {\r\n                console.error(\"Error al obtener los ingresos:\", error);\r\n            }\r\n        };\r\n\r\n        fetchIngresos();\r\n    }, []);\r\n\r\n    if (!data) {\r\n        return <p>Cargando ingresos...</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"bg-white p-4 rounded shadow\">\r\n            <h3 className=\"text-lg font-bold mb-4\">ðŸ’° Total de Ingresos: {totalIngresos.toFixed(2)} â‚¬</h3>\r\n            <Line data={data} options={{ responsive: true, plugins: { legend: { display: false } } }} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InformesIngresos;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}